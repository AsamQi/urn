(define-native =)
(define-native /=)
(define-native <)
(define-native <=)
(define-native >)
(define-native >=)

(define-native +)
(define-native -)
(define-native *)
(define-native /)
(define-native %)
(define-native ^)
(define-native ..)

(define-native _G)
(define-native _ENV)
(define-native arg)
(define-native gensym
  "Create a unique symbol, suitable for using in macros")
(define-native slice
  "Take a slice of XS, with all values at indexes between START and FINISH (or the last
   entry of XS if not specified).")
(define-native pretty
  "Create a user-readable version of VALUE")

(define-native assert)
(define-native collectgarbage)
(define-native dofile)
(define-native error)
(define-native getmetatable)
(define-native ipairs)
(define-native load)
(define-native loadfile)
(define-native next)
(define-native pairs)
(define-native pcall)
(define-native print)
(define-native rawequal)
(define-native get-idx)
(define-native rawlen)
(define-native set-idx!)
(define-native rawget)
(define-native rawset)
(define-native require)
(define-native select)
(define-native setmetatable)
(define-native tonumber)
(define-native tostring)
(define-native type#)
(define-native xpcall)

(define # (lambda (x) (get-idx x "n")))
